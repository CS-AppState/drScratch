# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-06-03 18:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: drScratch/settings.py:109
msgid "Spanish"
msgstr ""

#: drScratch/settings.py:110
msgid "English"
msgstr ""

#: templates/error/404.html:9 templates/error/500.html:9
#: templates/error/analyzing.html:9
msgid "Error"
msgstr ""

#: templates/error/404.html:36
msgid "ERROR 404 - Page Not Found"
msgstr ""

#: templates/error/404.html:39
msgid "Ops! This page doesn't exist"
msgstr ""

#: templates/error/404.html:59 templates/error/500.html:59
#: templates/error/analyzing.html:62
#: templates/learn/learn-unregistered.html:59 templates/main/main.html:85
#: templates/main/main.html.py:537 templates/sign/createOrganization.html:71
msgid "Get Started"
msgstr ""

#: templates/error/404.html:67 templates/error/500.html:67
#: templates/error/analyzing.html:70
#: templates/learn/learn-unregistered.html:67 templates/main/main.html:548
#: templates/upload/dashboard-unregistered-basic.html:202
#: templates/upload/dashboard-unregistered-developing.html:231
#: templates/upload/dashboard-unregistered-master.html:241
msgid "Â©2014 Dr.Scratch is powered by "
msgstr ""

#: templates/error/500.html:36
msgid "500 - Internal Server Error"
msgstr ""

#: templates/error/500.html:39 templates/error/analyzing.html:39
msgid "We apologize for this inconvenience"
msgstr ""

#: templates/error/analyzing.html:36
msgid "There was an error analyzing your project"
msgstr ""

#: templates/error/analyzing.html:54
msgid ""
"Sometimes we have got problems analyzing some projects. We're working on "
"this."
msgstr ""

#: templates/learn/Abstraction.html:70
#: templates/sign/createOrganization.html:86
msgid "Abstraction"
msgstr ""

#: templates/learn/Abstraction.html:75
#: templates/sign/createOrganization.html:91
msgid ""
"The ability of abstraction and decomposition of problems helps you to break "
"a problem into smaller parts that are easier to understand, program and "
"debug."
msgstr ""

#: templates/learn/Abstraction.html:81
#: templates/learn/DataRepresentation.html:81
#: templates/learn/FlowControl.html:81 templates/learn/Logic.html:79
#: templates/learn/Parallelization.html:81
#: templates/learn/Synchronization.html:81
#: templates/learn/UserInteractivity.html:89
#: templates/sign/createOrganization.html:97
msgid "If you get 0 points..."
msgstr ""

#: templates/learn/Abstraction.html:83
#: templates/sign/createOrganization.html:99
msgid ""
"When you start programming with Scratch, sometimes it may seem that the "
"simplest solution is to program all the behavior of a character in a single "
"program. However, ideally is that character behavior is controlled by "
"different programs and each of these programs deal with a particular issue. "
"Here's an example:"
msgstr ""

#: templates/learn/Abstraction.html:88
#: templates/sign/createOrganization.html:104
msgid ""
"This project, which paints a picture on the screen, has been programmed in a "
"single program that draws the two lines that make up the drawing. Although "
"it is a valid option, a simpler option to program and maintain the program "
"is divided into two parts, so that we have two different programs, one to "
"paint the front and another to paint the second:"
msgstr ""

#: templates/learn/Abstraction.html:92
#: templates/sign/createOrganization.html:108
msgid ""
"Thus, if we make any changes eg in one of the lines drawn, it is much easier "
"to know which part of the program we need to go to carry out the changes."
msgstr ""

#: templates/learn/Abstraction.html:99
#: templates/learn/DataRepresentation.html:124
#: templates/learn/FlowControl.html:95 templates/learn/Logic.html:94
#: templates/learn/Parallelization.html:94
#: templates/learn/Synchronization.html:95
#: templates/learn/UserInteractivity.html:103
#: templates/sign/createOrganization.html:115
msgid "If you get 1 point..."
msgstr ""

#: templates/learn/Abstraction.html:100
#: templates/sign/createOrganization.html:116
msgid ""
"Scratch allows new user-defined blocks that consist of a sequence of "
"instructions. These abstractions allow you to create simple programs to "
"read, program and maintain. Here's an example:"
msgstr ""

#: templates/learn/Abstraction.html:106
#: templates/sign/createOrganization.html:122
msgid ""
"This Scratch project draws two orange lines of different length  on the "
"screen. Rather than repeat the code 2 times, as shown in the example, you "
"can define a 'DrawOrange' block consisting of blocks that paint an orange "
"line on the screen and that you can tell what is the length of the line. For "
"this you go to the category 'More Blocks' and press the Create button a "
"block:"
msgstr ""

#: templates/learn/Abstraction.html:112
#: templates/sign/createOrganization.html:128
msgid ""
"Having defined the block 'DrawOrange' it can be used in any program of the "
"project, as we see below:"
msgstr ""

#: templates/learn/Abstraction.html:116
#: templates/sign/createOrganization.html:132
msgid ""
"In this way, we avoid repeating code, which makes our projects easier to "
"program and maintain. As can be seen, the first time the block is used "
"DrawOrange prompted a length of 100 steps, whereas the second time length is "
"200 steps."
msgstr ""

#: templates/learn/Abstraction.html:122
#: templates/learn/DataRepresentation.html:139
#: templates/learn/FlowControl.html:110 templates/learn/Logic.html:107
#: templates/learn/Parallelization.html:112
#: templates/learn/Synchronization.html:108
#: templates/learn/UserInteractivity.html:114
#: templates/sign/createOrganization.html:138
msgid "If you get 2 points..."
msgstr ""

#: templates/learn/Abstraction.html:123
#: templates/sign/createOrganization.html:139
msgid ""
"In some Scratch projects we have many identical characters that exactly "
"perform the same actions. The first idea that comes to mind to do this is to "
"create a character, schedule all his behavior and once you're ready, make as "
"many copies as you need. Therefore, if we want 20 Martians, create 20 "
"identical objects. However, what if I want to change the program? Would have "
"to go object by object performing this modification."
msgstr ""

#: templates/learn/Abstraction.html:125
#: templates/sign/createOrganization.html:141
msgid ""
"For such situations it is preferable to use clones, a type of abstraction "
"that helps us to program a single object, and dynamically create exact "
"copies with the same behavior."
msgstr ""

#: templates/learn/Abstraction.html:126
#: templates/sign/createOrganization.html:142
msgid ""
"Let's see how it works with an example. Imagine you want to pretend that it "
"is snowing on a project. We can draw an object that is a snowflake, and once "
"you start implementing the project, constantly be creating clones appear at "
"the top of the screen and they will fall to the bottom:"
msgstr ""

#: templates/learn/Abstraction.html:130
#: templates/sign/createOrganization.html:146
msgid ""
"Thus, just by programming a character, we can have infinite clones  which "
"are created at a particular time of project implementation and are deleted "
"when they are no longer needed."
msgstr ""

#: templates/learn/DataRepresentation.html:70
msgid "Data Representation"
msgstr ""

#: templates/learn/DataRepresentation.html:75
msgid ""
"Every Scratch project needs a set of information about the characters in "
"order to run properly. For example, we need to know the position of each "
"character, the direction it is pointing, size, etc. In addition, programmers "
"can create new information repositories to store other data such as the "
"level at which we find ourselves, elapsed time, the rating, the lives, the "
"rewards collected ..."
msgstr ""

#: templates/learn/DataRepresentation.html:83
msgid ""
"Each character of a Scratch project has a number of features, or attributes, "
"that every moment of the project have value, and can be modified by "
"programs. For example, a character has a certain size that can be modified "
"by block 'resize for 10', making the character appear slightly larger. "
"Following is the list of attributes that each character and blocks that can "
"be used to modify:"
msgstr ""

#: templates/learn/DataRepresentation.html:86
msgid "Position:"
msgstr ""

#: templates/learn/DataRepresentation.html:93
msgid "Size:"
msgstr ""

#: templates/learn/DataRepresentation.html:100
msgid "Orientation:"
msgstr ""

#: templates/learn/DataRepresentation.html:107
msgid "Costume:"
msgstr ""

#: templates/learn/DataRepresentation.html:112
msgid "Visibility:"
msgstr ""

#: templates/learn/DataRepresentation.html:125
msgid ""
"In addition to modifying the attributes of the characters, programmers can "
"use other mechanisms to store information on a Scratch project. One of these "
"mechanisms are variables that can store a value to store different types of "
"data that may need: at what level we are, how many lives you have left, how "
"many points we, how is called the user ..."
msgstr ""

#: templates/learn/DataRepresentation.html:127
msgid ""
"To create a variable you have to go to the category of data, click on "
"'Create a variable' and give a name. In the example shown below we have "
"given the name 'Points' as use it to store the number of points you get our "
"character."
msgstr ""

#: templates/learn/DataRepresentation.html:133
msgid ""
"In the program of the left, we assign the number of points that we want the "
"character has to the beginning of the game, in this case 0, for which we use "
"the block 'fixing points at 0'.  However in the program of the right, what "
"we do is that when the character touches the blue color, that could be a "
"target, you will add a point, for which we use the block 'change Points by "
"1'. In this case, the block 'change' would check the current value of the "
"variable points would add 1: If set to 0, I add 1 and is now worth 1; when "
"set to 1, I add 1 and is now worth 2 ..."
msgstr ""

#: templates/learn/DataRepresentation.html:140
msgid ""
"In addition to the variables, Scratch lets you use another data type to "
"store project information: The lists. The lists can store more than one "
"value at the same time, so they are ideal for storing rewards have been "
"recovered by a character or set of names, raise a couple of examples."
msgstr ""

#: templates/learn/DataRepresentation.html:142
msgid ""
"To create a list, you have to go to the data category, click on 'Create a "
"List' and give a name. In the example, we have named our 'Students' list:"
msgstr ""

#: templates/learn/DataRepresentation.html:148
msgid ""
"What have we done with this program? The first thing we do is, to start "
"execution, delete all items from the list Estudiantes, to empty it "
"completely and  not appear elements of an previous project implementation. "
"Then we ask three times the user to enter a name, and each name entered "
"insert it in the last position in the list Students."
msgstr ""

#: templates/learn/DataRepresentation.html:150
msgid ""
"What we do with the list? We could, for example, use it to get a volunteer "
"to carry out an exercise to the whiteboard. Look at the new instructions "
"added to the program:"
msgstr ""

#: templates/learn/DataRepresentation.html:156
msgid ""
"We generated a random number between 1 and 3, which are the elements in the "
"list, we selected the element that occupies that position in the list. "
"Sometimes we take the name that is in position 1, others that it is in "
"position 2 and the other at 3."
msgstr ""

#: templates/learn/DataRepresentation.html:158
msgid ""
"Lists have many possibilities and many available operations ... you dare to "
"investigate how they work?"
msgstr ""

#: templates/learn/FlowControl.html:70
msgid "Flow Control"
msgstr ""

#: templates/learn/FlowControl.html:75
msgid ""
"Instructions related to algorithmic notions of flow control can help you to "
"control the behavior of your characters, making, for example, certain blocks "
"that are repeated a number of times,  or until a situation arises."
msgstr ""

#: templates/learn/FlowControl.html:83
msgid ""
"The most basic way to control the behavior of your characters is creating a "
"program composed of a set of blocks are executed one after another, as we "
"see in the picture:"
msgstr ""

#: templates/learn/FlowControl.html:88
msgid ""
"How does this program works? When the user click on the green flag run "
"behind one another all blocks that have been included in the program. Start "
"with the first block 'say I'm a cat dancing for 2 seconds', then run 'move "
"10 steps' then 'turn 15 degrees right', and so on to the last block of the "
"program."
msgstr ""

#: templates/learn/FlowControl.html:96
msgid ""
"Sometimes when we want a set of blocks is constantly repeated, instead of "
"repeating the same blocks over and over again, you can use a repeat "
"instruction allowing achieve the same effect, but more comfortable and "
"manageable way. Consider a couple of examples:"
msgstr ""

#: templates/learn/FlowControl.html:100
msgid "How these control blocks works?"
msgstr ""

#: templates/learn/FlowControl.html:102
msgid ""
"In the block 'repeat' when execution reaches this point is repeated as often "
"as has been indicated in the parameter block 'repeat', in the example would "
"be 3 times, all blocks included within this block. We can see that the block "
"'repeat' has an arrow at the bottom indicating that when they finish "
"executing the blocks back again up."
msgstr ""

#: templates/learn/FlowControl.html:104
msgid ""
"The block 'forever' works like the 'repeat' but never finish executing the "
"blocks containing in its interior."
msgstr ""

#: templates/learn/FlowControl.html:111
msgid ""
"Sometimes we don't know previously  the number of times you want a set of "
"blocks is executed, as this depends on a given situation. In these cases, "
"the block 'repeat until ...' is really useful. Here's an example:"
msgstr ""

#: templates/learn/FlowControl.html:115
msgid ""
"In the example, the character will constantly repeat the instruction 'say "
"You don't caught me...' while he don't touch the enemy. At the time that the "
"condition is met instruction 'repeat until ...', the contents inside will "
"finish run and will jump to the next instruction, in this case 'say You "
"caught me!'."
msgstr ""

#: templates/learn/Logic.html:68
msgid "Logic"
msgstr ""

#: templates/learn/Logic.html:73
msgid ""
"Instructions related to logical thinking can help your projects are dynamic, "
"so that they behave differently depending on the situation. In the stories, "
"for example, these instructions are not as important as they usually have a "
"linear structure we always want to run the same way, but in other projects, "
"such as video games are essential to perform different actions depending on "
"the situation."
msgstr ""

#: templates/learn/Logic.html:81
msgid "The most basic block you can start working logical thinking is this:"
msgstr ""

#: templates/learn/Logic.html:86
msgid ""
"How this block works? When execution reaches this point, the condition on "
"the block is evaluated, and if this is true, the set of blocks that are "
"within the if executed."
msgstr ""

#: templates/learn/Logic.html:87
msgid ""
"In the example, if the character is touching the blue color, he says 'I "
"reached the goal.'"
msgstr ""

#: templates/learn/Logic.html:95
msgid ""
"Now that you know the instructions if, perhaps you can start using blocks "
"if / else, which can be very practical in many types of projects. The blocks "
"if / else are very similar to the block if, but contain two sets of blocks "
"inside."
msgstr ""

#: templates/learn/Logic.html:99
msgid ""
"How this block works? When execution reaches this point, the condition on "
"the block is evaluated, and if this is true, the set of blocks that are "
"within the 'if' is executed, but if the condition is false, then the set of  "
"blocks that are within the 'else' is executed."
msgstr ""

#: templates/learn/Logic.html:101
msgid ""
"In the example, if the character is touching the blue color, he says  'I "
"reached the goal!', but ,if you are not touching the purple color, says 'I "
"have not reached the goal'."
msgstr ""

#: templates/learn/Logic.html:108
msgid ""
"To make decisions on some projects sometimes is necessary to evaluate more "
"than one condition at the same time to know what to execute. In these "
"situations it is very helpful to use logical operations that combine the "
"conditions. Logical operations are available in Scratch AND, OR and No."
msgstr ""

#: templates/learn/Logic.html:113
msgid ""
"The operation AND is true when both conditions are true evaluated. The OR "
"operation is true when one of two conditions are true evaluated. And the "
"operation otherwise not worth the condition, ie, if the condition is true, "
"not returns false and vice versa."
msgstr ""

#: templates/learn/Parallelization.html:70
msgid "Parallelization"
msgstr ""

#: templates/learn/Parallelization.html:75
msgid ""
"In most Scratch creations a certain level of parallelism is required. But "
"what means parallelism? Parallelism is the possibility that several things "
"occur simultaneously. For example, two characters perform an action while a "
"character or do several things at once."
msgstr ""

#: templates/learn/Parallelization.html:83
msgid ""
"The most basic and most obvious way to achieve parallelism is to have "
"several programs that start with 'When green flag is clicked':"
msgstr ""

#: templates/learn/Parallelization.html:87
msgid ""
"Thus, when the user clicking on the green flag, all programs that start with "
"this block would begin to run simultaneously, or in parallel, as can also be "
"said. You could have several programs that start with this block in the same "
"character, if you want it to do several things at once, or in programs of "
"different characters, if you want everyone to undertake an action at "
"beginning of execution."
msgstr ""

#: templates/learn/Parallelization.html:95
msgid ""
"Another way to achieve parallelism in your program is doing several things "
"occur when the user presses a key or clicks on an object. Consider a couple "
"of examples:"
msgstr ""

#: templates/learn/Parallelization.html:101
msgid "How these blocks works?"
msgstr ""

#: templates/learn/Parallelization.html:103
msgid ""
"In the first example, we see two different characters that, when a key is "
"pressed, perform a certain action. Therefore, when the user press the a key, "
"in this case, both the cat and the child run at the same time 'say A for 2 "
"seconds'"
msgstr ""

#: templates/learn/Parallelization.html:105
msgid ""
"In the second example we see that a character has two programs that begin "
"with 'when clicking this object'. Therefore, when the user clicks on this "
"character, both programs will begin to run simultaneously, in parallel."
msgstr ""

#: templates/learn/Parallelization.html:113
msgid "There are several events more that can achieve parallelism:"
msgstr ""

#: templates/learn/Parallelization.html:117
msgid ""
"As you see, you could create several programs that begin to run when "
"changing the background to a given scenario, or to receive a particular "
"message, or when the room volume exceeds a certain threshold, when the video "
"motion is greater than a number pixel concrete or when the timer has "
"exceeded the value you want. Therefore, there are many possibilities to make "
"things happen in your programs simultaneously. Do you dare to investigate "
"how works?"
msgstr ""

#: templates/learn/Synchronization.html:70
msgid "Synchronization"
msgstr ""

#: templates/learn/Synchronization.html:75
msgid ""
"Instructions related to synchronization allow our characters to organize "
"things happen in the order we want."
msgstr ""

#: templates/learn/Synchronization.html:83
msgid ""
"The easiest way to synchronize the behavior of your characters is using a "
"'wait' block, which makes the character waits the number of seconds you "
"write as a parameter block. An example of how this block can be used to "
"synchronize two characters:"
msgstr ""

#: templates/learn/Synchronization.html:88
msgid ""
"In this case it uses blocks 'wait' to synchronize these two characters to "
"maintain a conversation, so that while one speaks, the other character "
"waits, and vice versa. Note that the number of seconds that each character "
"expected, are equal to the number of seconds that the other character "
"speaks, so they never talk at the same time."
msgstr ""

#: templates/learn/Synchronization.html:96
msgid ""
"Synchronization using blocks 'wait' is very simple when programs are small "
"and have few characters, but when are larger, or when we have several "
"characters, or when conditions to generate a reaction can not be measured "
"previously, it is more efficient to use other modes of synchronization and "
"messages. Here's an example:"
msgstr ""

#: templates/learn/Synchronization.html:101
msgid ""
"How do these syncblocks work? When a situation occurs in a character we want "
"to cause a reaction in another character, we can use messaging. In the "
"example, when the mouse touches the cat, the message 'Caught!', which will "
"be sent to all the characters of the project is sent. Thus, when the "
"butterfly receives the message 'Caught!', the instructions on the block "
"'when receive 'caught!''. Therefore, when the user touches the cat whit the "
"mouse, butterfly says, 'You caught my companion. Now you have to catch me!'."
msgstr ""

#: templates/learn/Synchronization.html:109
msgid ""
"In addition to sending messages, you can synchronize characters to make "
"things happen in the order we want, using other blocks, such as 'wait until' "
"or 'when the background changes to ...'."
msgstr ""

#: templates/learn/Synchronization.html:114
msgid ""
"In the first example, when program execution reaches that point will stop "
"until the condition is met in this case, until life is equal to 0. When "
"lives equal to 0, then continue execution of the remaining blocks, this "
"case, 'said Game Over' and 'stop all', which ends the execution of the "
"project."
msgstr ""

#: templates/learn/Synchronization.html:116
msgid ""
"In the second example, the moment when the scene changes to the backdrop "
"with the name 'Spring', the character will execute the blocks placed after "
"the instruction 'when the backdrop changes to Spring', ie to be displayed "
"and will say 'spring has come!'."
msgstr ""

#: templates/learn/UserInteractivity.html:78
msgid "User interactivity"
msgstr ""

#: templates/learn/UserInteractivity.html:83
msgid ""
"The instructions related to user interactivity can help your Scratch "
"projects be more interactive, ie the person who is running it can perform "
"actions that provoke new situations in the project. For example, I can use "
"the keyboard or mouse to move a character, you can answer questions or "
"playing computer webcam, among many other possibilities."
msgstr ""

#: templates/learn/UserInteractivity.html:91
msgid ""
"The most basic block you can start working interactivity with the user is "
"'when green flag clicked'."
msgstr ""

#: templates/learn/UserInteractivity.html:96
msgid ""
"How this block works? When the user who wants to run your project Scratch "
"clicks on the green flag, all blocks were placed under the block 'when green "
"flag clicked' begin to run. You can have as many programs as you need to "
"start with this block."
msgstr ""

#: templates/learn/UserInteractivity.html:104
msgid ""
"Now that you have begun to interact with the user running your Scratch "
"project, perhaps you can try some of the following blocks:"
msgstr ""

#: templates/learn/UserInteractivity.html:108
msgid ""
"As you see, you can allow users to interact with your characters by pressing "
"keys to move, writing answers to questions and your characters use user "
"responses, move characters with the mouse, or perform actions when the user "
"clicks an object."
msgstr ""

#: templates/learn/UserInteractivity.html:115
msgid ""
"One of the funniest Scratch possibilities in terms of user interactivity is "
"the possibility that the user can use your webcam or microphone to interact "
"with characters from Scratch or sound to trigger certain actions."
msgstr ""

#: templates/learn/UserInteractivity.html:119
msgid ""
"As you can see in the examples, we can make certain sets of blocks are "
"executed when the ambient sound captured by the microphone is greater than a "
"certain threshold, or when video motion occurs over an object or background. "
"The possibilities of these blocks are very large and allows your creations "
"Scratch are fully interactive with users."
msgstr ""

#: templates/learn/attribute-initialization.html:6
#: templates/upload/dashboard-unregistered.html:254
msgid "modified but not initialized correctly."
msgstr ""

#: templates/learn/learn-unregistered.html:9
msgid "Learn"
msgstr ""

#: templates/learn/learn-unregistered.html:36
msgid "If you want to learn more, you'll must to sign up in..."
msgstr ""

#: templates/learn/learn-unregistered.html:51
msgid "New features"
msgstr ""

#: templates/learn/learn-unregistered.html:53
msgid "We're working on this and would be pleased to receive your feedback"
msgstr ""

#: templates/learn/sprite-naming.html:2
msgid "Incorrect names: "
msgstr ""

#: templates/main/main.html:75 templates/sign/createOrganization.html:65
msgid "Why?"
msgstr ""

#: templates/main/main.html:76
msgid "How?"
msgstr ""

#: templates/main/main.html:77
msgid "Working on"
msgstr ""

#: templates/main/main.html:78 templates/sign/createOrganization.html:66
msgid "Contact us"
msgstr ""

#: templates/main/main.html:79
msgid "Organizations"
msgstr ""

#: templates/main/main.html:108
msgid "Analyze your Scratch projects"
msgstr ""

#: templates/main/main.html:110
msgid ""
"Welcome to the Dr. Scratch website, an analytical tool that evaluates your "
"Scratch projects in a variety of computational areas. This analyzer is a "
"helpful tool to evaluate your own projects, or those of your Scratch "
"students."
msgstr ""

#: templates/main/main.html:114
msgid "Learn More"
msgstr ""

#: templates/main/main.html:128
msgid "Analyze your Scratch Project now!"
msgstr ""

#: templates/main/main.html:132
msgid ""
"<input name=\"urlProject\" id=\"cf-name\" class=\"form-control input-box "
"placeholder\" placeholder=\"http:/scratch.mit.edu/projects/your_number\" "
"type=\"text\">"
msgstr ""

#: templates/main/main.html:133
msgid "Add project URL"
msgstr ""

#: templates/main/main.html:136
msgid ""
"<input  name='zipFile' type='file' class='filestyle' data-buttonText='Choose "
"Project'>"
msgstr ""

#: templates/main/main.html:137
msgid "Add a .sb or .sb2 file"
msgstr ""

#: templates/main/main.html:144 templates/main/main.html.py:147
msgid "Error! Please choose a .sb or .sb2 file or input an url"
msgstr ""

#: templates/main/main.html:151
msgid "Error! Your project id is wrong"
msgstr ""

#: templates/main/main.html:155
msgid "Error! Your project doesn't exist in Scratch's servers"
msgstr ""

#: templates/main/main.html:208
msgid "WHY?"
msgstr ""

#: templates/main/main.html:210
msgid "Why "
msgstr ""

#: templates/main/main.html:210
msgid "youâll love Dr.Scratch"
msgstr ""

#: templates/main/main.html:214
msgid "A powerful tool to analyze your Scratch projects"
msgstr ""

#: templates/main/main.html:226
msgid "Simple & Fun"
msgstr ""

#: templates/main/main.html:228
msgid ""
"Your students can easily learn how to improve their programming skills in a "
"fun way."
msgstr ""

#: templates/main/main.html:239
msgid "Improve your skills"
msgstr ""

#: templates/main/main.html:241
msgid ""
"We provide feedback on several aspects which are related to Computational "
"Thinking."
msgstr ""

#: templates/main/main.html:252
msgid "Always improving"
msgstr ""

#: templates/main/main.html:254
msgid ""
"We're continually enhancing the features of Dr. Scratch, and we'd love to "
"hear your thoughts"
msgstr ""

#: templates/main/main.html:291
msgid "How"
msgstr ""

#: templates/main/main.html:293
msgid "How "
msgstr ""

#: templates/main/main.html:293
msgid "it works"
msgstr ""

#: templates/main/main.html:297
msgid "There are two options to analyze a Scratch project with Dr.Scratch"
msgstr ""

#: templates/main/main.html:298
msgid "project.png"
msgstr ""

#: templates/main/main.html:300
msgid ""
"You can upload an sb2 file or just provide the project url, avoiding the "
"need to previously download the project to your computer. By analyzing your "
"projects with Dr.Scratch, you can easily check your Computational Thinking "
"Score."
msgstr ""

#: templates/main/main.html:309
msgid "It is extremely easy to use, both for begginers and expert programmers."
msgstr ""

#: templates/main/main.html:313
msgid "You receive feedback to improve your coding skills."
msgstr ""

#: templates/main/main.html:321
msgid ""
"You can keep on improving your programming skills by yourself even from home."
msgstr ""

#: templates/main/main.html:325
msgid "You can track your progress through charts and stats."
msgstr ""

#: templates/main/main.html:344
msgid "NEW FEATURES"
msgstr ""

#: templates/main/main.html:346
msgid "Coming "
msgstr ""

#: templates/main/main.html:346
msgid "Soon"
msgstr ""

#: templates/main/main.html:350
msgid "We are working on new features to improve Dr.Scratch"
msgstr ""

#: templates/main/main.html:365
msgid "Multilingual Website"
msgstr ""

#: templates/main/main.html:369
msgid ""
"We know the importance of receiving feedback on your own language to "
"understand every little detail or hint, so we'll translate Dr. Scratch to "
"facilitate coding learning to as many people as possible."
msgstr ""

#: templates/main/main.html:380
msgid "Teacher Accounts"
msgstr ""

#: templates/main/main.html:384
msgid ""
"Teachers will be able to group (and follow) their students to keep track of "
"their progress in a fast and simple way."
msgstr ""

#: templates/main/main.html:395
msgid "Cloud Platform"
msgstr ""

#: templates/main/main.html:399
msgid ""
"We are in the process of migrating our servers to the Cloud with the aim of "
"providing a better performance."
msgstr ""

#: templates/main/main.html:424
msgid ""
"With Dr.Scratch plug-ins for Chrome and Firefox, students will analyze their "
"project WHILE programming on the Scratch website."
msgstr ""

#: templates/main/main.html:435
msgid "Gamification"
msgstr ""

#: templates/main/main.html:439
msgid ""
"We'd like to take learners curiosity one step further. Do you have cool "
"ideas to gamify our platform?"
msgstr ""

#: templates/main/main.html:450
msgid "Social Network"
msgstr ""

#: templates/main/main.html:454
msgid ""
"The new social network funcionalities will allow users to communicate with "
"each other to exchange ideas and challenges."
msgstr ""

#: templates/main/main.html:474
msgid "Contact"
msgstr ""

#: templates/main/main.html:476
msgid "<strong>Contact </strong> Dr. Scratch team</h2>"
msgstr ""

#: templates/main/main.html:480
msgid "We would be pleased to receive your feedback"
msgstr ""

#: templates/main/main.html:532
msgid "Are you a Dr.Scratch user?"
msgstr ""

#: templates/main/main.html:535
msgid "Join now!"
msgstr ""

#: templates/main/main.html:566
msgid "Wait a moment please"
msgstr ""

#: templates/main/main.html:584
msgid "loading..."
msgstr ""

#: templates/upload/dashboard-unregistered-basic.html:63
#: templates/upload/dashboard-unregistered-developing.html:64
#: templates/upload/dashboard-unregistered-master.html:67
msgid "Dr.Scratch(Beta Version)"
msgstr ""

#: templates/upload/dashboard-unregistered-basic.html:77
#: templates/upload/dashboard-unregistered-developing.html:78
#: templates/upload/dashboard-unregistered-master.html:81
msgid "Score:"
msgstr ""

#: templates/upload/dashboard-unregistered-basic.html:78
#: templates/upload/dashboard-unregistered-developing.html:79
#: templates/upload/dashboard-unregistered-master.html:82
#, python-format
msgid ""
" I have just obtained %(points)s points analyzing my project in Dr. Scratch! "
"Beat it! @DrScratchTool "
msgstr ""

#: templates/upload/dashboard-unregistered-basic.html:83
msgid ""
"<h3 class='text-left dark-text'>Your level is...  <strong>BASIC! </strong></"
"h3></img>"
msgstr ""

#: templates/upload/dashboard-unregistered-basic.html:84
msgid "You're at the first of a great adventure . . .<br> Continue that way!"
msgstr ""

#: templates/upload/dashboard-unregistered-basic.html:93
#: templates/upload/dashboard-unregistered-developing.html:94
#: templates/upload/dashboard-unregistered-master.html:97
msgid "How to improve my score:"
msgstr ""

#: templates/upload/dashboard-unregistered-basic.html:105
#: templates/upload/dashboard-unregistered-basic.html:114
#: templates/upload/dashboard-unregistered-basic.html:156
#: templates/upload/dashboard-unregistered-developing.html:106
#: templates/upload/dashboard-unregistered-developing.html:120
#: templates/upload/dashboard-unregistered-developing.html:129
#: templates/upload/dashboard-unregistered-developing.html:143
#: templates/upload/dashboard-unregistered-developing.html:185
#: templates/upload/dashboard-unregistered-master.html:108
#: templates/upload/dashboard-unregistered-master.html:118
#: templates/upload/dashboard-unregistered-master.html:127
#: templates/upload/dashboard-unregistered-master.html:195
#, python-format
msgid ""
"\n"
"                                        %(key)s\n"
"                                        "
msgstr ""

#: templates/upload/dashboard-unregistered-basic.html:145
#: templates/upload/dashboard-unregistered-developing.html:174
#: templates/upload/dashboard-unregistered-master.html:184
#: templates/upload/dashboard-unregistered.html:114
msgid "Concept"
msgstr ""

#: templates/upload/dashboard-unregistered-basic.html:146
#: templates/upload/dashboard-unregistered-developing.html:175
#: templates/upload/dashboard-unregistered-master.html:185
#: templates/upload/dashboard-unregistered.html:115
msgid "Points"
msgstr ""

#: templates/upload/dashboard-unregistered-developing.html:84
msgid ""
"<h3 class='text-left dark-text'>Your level is...  <strong>DEVELOPING! </"
"strong></h3></img>"
msgstr ""

#: templates/upload/dashboard-unregistered-developing.html:85
msgid "You're doing a great job. Keep it up!!!"
msgstr ""

#: templates/upload/dashboard-unregistered-master.html:87
msgid ""
"<h3 class='text-left dark-text'>Your level is...  <strong>MASTER! </strong></"
"h3></img>"
msgstr ""

#: templates/upload/dashboard-unregistered-master.html:88
msgid "You're the master of the universe!!!"
msgstr ""

#: templates/upload/dashboard-unregistered-master.html:145
msgid "Details to fix:"
msgstr ""

#: templates/upload/dashboard-unregistered-master.html:148
msgid " duplicated scripts."
msgstr ""

#: templates/upload/dashboard-unregistered-master.html:149
msgid " sprites naming."
msgstr ""

#: templates/upload/dashboard-unregistered-master.html:150
msgid " dead code."
msgstr ""

#: templates/upload/dashboard-unregistered-master.html:151
msgid " sprite atributes."
msgstr ""

#: templates/upload/dashboard-unregistered.html:10
msgid "Project results"
msgstr ""

#: templates/upload/dashboard-unregistered.html:48
#: templates/upload/dashboard-unregistered.html:57
#: templates/upload/dashboard-unregistered.html:59
msgid "Dashboard"
msgstr ""

#: templates/upload/dashboard-unregistered.html:57
msgid "Overview"
msgstr ""

#: templates/upload/dashboard-unregistered.html:63
msgid "Welcome to Doctor Scratch. Project results."
msgstr ""

#: templates/upload/dashboard-unregistered.html:79
msgid "CT Score:"
msgstr ""

#: templates/upload/dashboard-unregistered.html:86
msgid "Your level:"
msgstr ""

#: templates/upload/dashboard-unregistered.html:88
msgid "Master"
msgstr ""

#: templates/upload/dashboard-unregistered.html:90
msgid "Developing"
msgstr ""

#: templates/upload/dashboard-unregistered.html:92
msgid "Basic"
msgstr ""

#: templates/upload/dashboard-unregistered.html:101
#, python-format
msgid ""
"I have just obtained %(points)s points analyzing my project in Dr. Scratch! "
"Beat it! @DrScratchTool "
msgstr ""

#: templates/upload/dashboard-unregistered.html:109
msgid "CT Score in detail:"
msgstr ""

#: templates/upload/dashboard-unregistered.html:127
#: templates/upload/dashboard-unregistered.html:131
#: templates/upload/dashboard-unregistered.html:135
msgid "Learn more!!!"
msgstr ""

#: templates/upload/dashboard-unregistered.html:139
msgid "Well done!!!"
msgstr ""

#: templates/upload/dashboard-unregistered.html:162
msgid "Duplicated Scripts"
msgstr ""

#: templates/upload/dashboard-unregistered.html:181
msgid "Sprites naming"
msgstr ""

#: templates/upload/dashboard-unregistered.html:190
msgid "Incorrect name:"
msgstr ""

#: templates/upload/dashboard-unregistered.html:209
msgid "Dead Code"
msgstr ""

#: templates/upload/dashboard-unregistered.html:220
msgid "blocks"
msgstr ""

#: templates/upload/dashboard-unregistered.html:242
msgid "Sprite attributes initialization"
msgstr ""
